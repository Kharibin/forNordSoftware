'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _ = require('../');

var _stackFrameParser = require('stack-frame-parser');

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

test('basic warning', _asyncToGenerator(_regenerator2.default.mark(function _callee() {
  var error, frames, expected;
  return _regenerator2.default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          expect.assertions(2);
          error = 'Warning: Each child in an array or iterator should have a unique "key" prop. Check the render method of `B`. See https://fb.me/react-warning-keys for more information.\n    in div (at B.js:8)\n    in B (at A.js:6)\n    in A (at App.js:8)\n    in div (at App.js:10)\n    in App (at index.js:6)';


          fetch.mockResponseOnce(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.js')).toString('utf8'));
          fetch.mockResponseOnce(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.js.map')).toString('utf8'));
          _context.next = 6;
          return (0, _.unmap)('/static/js/bundle.js', (0, _stackFrameParser.parse)(error), 0);

        case 6:
          frames = _context.sent;
          expected = JSON.parse(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.json')).toString('utf8'));

          expect(frames).toEqual(expected);

          fetch.mockResponseOnce(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.js')).toString('utf8'));
          fetch.mockResponseOnce(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.js.map')).toString('utf8'));
          _context.t0 = expect;
          _context.next = 14;
          return (0, _.unmap)('/static/js/bundle.js', expected);

        case 14:
          _context.t1 = _context.sent;
          _context.t2 = expected;
          (0, _context.t0)(_context.t1).toEqual(_context.t2);

        case 17:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined);
})));

test('default context & unfound source', _asyncToGenerator(_regenerator2.default.mark(function _callee2() {
  var error, frames;
  return _regenerator2.default.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          expect.assertions(1);
          error = 'Warning: Each child in an array or iterator should have a unique "key" prop. Check the render method of `B`. See https://fb.me/react-warning-keys for more information.\n    in div (at B.js:8)\n    in unknown (at blabla.js:10)';


          fetch.mockResponseOnce(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.js')).toString('utf8'));
          fetch.mockResponseOnce(_fs2.default.readFileSync((0, _path.resolve)(__dirname, '../../fixtures/bundle.js.map')).toString('utf8'));
          _context2.next = 6;
          return (0, _.unmap)('/static/js/bundle.js', (0, _stackFrameParser.parse)(error));

        case 6:
          frames = _context2.sent;

          expect(frames).toEqual([{
            functionName: 'div',
            fileName: '/static/js/bundle.js',
            lineNumber: 41466,
            columnNumber: null,
            _originalFunctionName: 'div',
            _originalFileName: 'B.js',
            _originalLineNumber: 8,
            _originalColumnNumber: null,
            _scriptCode: [{
              lineNumber: 41463,
              content: '        },',
              highlight: false
            }, {
              lineNumber: 41464,
              content: '        [1, 2].map(function (v) {',
              highlight: false
            }, {
              lineNumber: 41465,
              content: '          return _react2.default.createElement(',
              highlight: false
            }, {
              lineNumber: 41466,
              content: "            'div',",
              highlight: true
            }, {
              lineNumber: 41467,
              content: '            {',
              highlight: false
            }, {
              lineNumber: 41468,
              content: '              __source: {',
              highlight: false
            }, {
              lineNumber: 41469,
              content: '                fileName: _jsxFileName,',
              highlight: false
            }],
            _originalScriptCode: [{
              lineNumber: 5,
              content: '    return (',
              highlight: false
            }, {
              lineNumber: 6,
              content: '      <div>',
              highlight: false
            }, {
              lineNumber: 7,
              content: '        {[1, 2].map(v => (',
              highlight: false
            }, {
              lineNumber: 8,
              content: '          <div>{v}</div>',
              highlight: true
            }, {
              lineNumber: 9,
              content: '        ))}',
              highlight: false
            }, {
              lineNumber: 10,
              content: '      </div>',
              highlight: false
            }, {
              lineNumber: 11,
              content: '    )',
              highlight: false
            }]
          }, {
            functionName: null,
            fileName: null,
            lineNumber: null,
            columnNumber: null,
            _originalFunctionName: 'unknown',
            _originalFileName: 'blabla.js',
            _originalLineNumber: 10,
            _originalColumnNumber: null,
            _scriptCode: null,
            _originalScriptCode: null
          }]);

        case 8:
        case 'end':
          return _context2.stop();
      }
    }
  }, _callee2, undefined);
})));